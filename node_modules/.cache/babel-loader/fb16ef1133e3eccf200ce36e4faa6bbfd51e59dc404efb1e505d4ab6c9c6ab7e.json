{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Header from\"../components/header/Header\";import Greeting from\"./greeting/Greeting\";import Skills from\"./skills/Skills\";import StackProgress from\"./skillProgress/skillProgress\";import WorkExperience from\"./workExperience/WorkExperience\";import Projects from\"./projects/Projects\";import StartupProject from\"./StartupProjects/StartupProject\";import Achievement from\"./achievement/Achievement\";import Blogs from\"./blogs/Blogs\";import Footer from\"../components/footer/Footer\";import Talks from\"./talks/Talks\";import Podcast from\"./podcast/Podcast\";import Education from\"./education/Education\";import ScrollToTopButton from\"./topbutton/Top\";import Twitter from\"./twitter-embed/twitter\";import Profile from\"./profile/Profile\";import SplashScreen from\"./splashScreen/SplashScreen\";import{splashScreen}from\"../portfolio\";import{StyleProvider}from\"../contexts/StyleContext\";import{useLocalStorage}from\"../hooks/useLocalStorage\";import\"./Main.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Main=()=>{const darkPref=window.matchMedia(\"(prefers-color-scheme: dark)\");const[isDark,setIsDark]=useLocalStorage(\"isDark\",darkPref.matches);const[isShowingSplashAnimation,setIsShowingSplashAnimation]=useState(true);useEffect(()=>{if(splashScreen.enabled){const splashTimer=setTimeout(()=>setIsShowingSplashAnimation(false),splashScreen.duration);return()=>{clearTimeout(splashTimer);};}},[]);const changeTheme=()=>{setIsDark(!isDark);};return/*#__PURE__*/_jsx(\"div\",{className:isDark?\"dark-mode\":null,children:/*#__PURE__*/_jsx(StyleProvider,{value:{isDark:isDark,changeTheme:changeTheme},children:isShowingSplashAnimation&&splashScreen.enabled?/*#__PURE__*/_jsx(SplashScreen,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Greeting,{}),/*#__PURE__*/_jsx(Skills,{}),/*#__PURE__*/_jsx(StackProgress,{}),/*#__PURE__*/_jsx(Education,{}),/*#__PURE__*/_jsx(WorkExperience,{}),/*#__PURE__*/_jsx(Projects,{}),/*#__PURE__*/_jsx(StartupProject,{}),/*#__PURE__*/_jsx(Achievement,{}),/*#__PURE__*/_jsx(Blogs,{}),/*#__PURE__*/_jsx(Talks,{}),/*#__PURE__*/_jsx(Twitter,{}),/*#__PURE__*/_jsx(Podcast,{}),/*#__PURE__*/_jsx(Profile,{}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(ScrollToTopButton,{})]})})});};export default Main;","map":{"version":3,"names":["React","useEffect","useState","Header","Greeting","Skills","StackProgress","WorkExperience","Projects","StartupProject","Achievement","Blogs","Footer","Talks","Podcast","Education","ScrollToTopButton","Twitter","Profile","SplashScreen","splashScreen","StyleProvider","useLocalStorage","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Main","darkPref","window","matchMedia","isDark","setIsDark","matches","isShowingSplashAnimation","setIsShowingSplashAnimation","enabled","splashTimer","setTimeout","duration","clearTimeout","changeTheme","className","children","value"],"sources":["/Users/hansikayedlapalli/Desktop/portFolio/src/containers/Main.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Header from \"../components/header/Header\";\nimport Greeting from \"./greeting/Greeting\";\nimport Skills from \"./skills/Skills\";\nimport StackProgress from \"./skillProgress/skillProgress\";\nimport WorkExperience from \"./workExperience/WorkExperience\";\nimport Projects from \"./projects/Projects\";\nimport StartupProject from \"./StartupProjects/StartupProject\";\nimport Achievement from \"./achievement/Achievement\";\nimport Blogs from \"./blogs/Blogs\";\nimport Footer from \"../components/footer/Footer\";\nimport Talks from \"./talks/Talks\";\nimport Podcast from \"./podcast/Podcast\";\nimport Education from \"./education/Education\";\nimport ScrollToTopButton from \"./topbutton/Top\";\nimport Twitter from \"./twitter-embed/twitter\";\nimport Profile from \"./profile/Profile\";\nimport SplashScreen from \"./splashScreen/SplashScreen\";\nimport {splashScreen} from \"../portfolio\";\nimport {StyleProvider} from \"../contexts/StyleContext\";\nimport {useLocalStorage} from \"../hooks/useLocalStorage\";\nimport \"./Main.scss\";\n\nconst Main = () => {\n  const darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const [isDark, setIsDark] = useLocalStorage(\"isDark\", darkPref.matches);\n  const [isShowingSplashAnimation, setIsShowingSplashAnimation] =\n    useState(true);\n\n  useEffect(() => {\n    if (splashScreen.enabled) {\n      const splashTimer = setTimeout(\n        () => setIsShowingSplashAnimation(false),\n        splashScreen.duration\n      );\n      return () => {\n        clearTimeout(splashTimer);\n      };\n    }\n  }, []);\n\n  const changeTheme = () => {\n    setIsDark(!isDark);\n  };\n\n  return (\n    <div className={isDark ? \"dark-mode\" : null}>\n      <StyleProvider value={{isDark: isDark, changeTheme: changeTheme}}>\n        {isShowingSplashAnimation && splashScreen.enabled ? (\n          <SplashScreen />\n        ) : (\n          <>\n            <Header />\n            <Greeting />\n            <Skills />\n            <StackProgress />\n            <Education />\n            <WorkExperience />\n            <Projects />\n            <StartupProject />\n            <Achievement />\n            <Blogs />\n            <Talks />\n            <Twitter />\n            <Podcast />\n            <Profile />\n            <Footer />\n            <ScrollToTopButton />\n          </>\n        )}\n      </StyleProvider>\n    </div>\n  );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}